<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dw.ko&#39;s TIL</title>
    <link>https://guyko91.github.io/</link>
    <description>Recent content on dw.ko&#39;s TIL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 05 Jul 2022 11:12:34 +0900</lastBuildDate><atom:link href="https://guyko91.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DTO, VO, Entity의 구분</title>
      <link>https://guyko91.github.io/posts/20220705_1/</link>
      <pubDate>Tue, 05 Jul 2022 11:12:34 +0900</pubDate>
      
      <guid>https://guyko91.github.io/posts/20220705_1/</guid>
      <description>DTO, VO, Entity의 구분 1. DTO (Data Transfer Object) 말 그대로 데이터를 전송하기위한 객체. 주로 View 와 Controller 사이에서 데이터를 주고 받을 때, 사용한다. DTO는 getter / setter 메소드 외의 비즈니스 로직은 포함하지 않는다. 생성자 초기화 방식을 사용하면 불변 객체로 활용하여, 데이터 전달 과정에서 변조 위험을 없앨 수 있다. 2. VO (Value Object) 값 자체를 표현하는 객체. 각 객체의 주소가 달라도, 값이 같으면 동일한 것으로 여긴다. getter 메소드와 함께, 비즈니스 로직을 포함할 수 있다.</description>
    </item>
    
  </channel>
</rss>
